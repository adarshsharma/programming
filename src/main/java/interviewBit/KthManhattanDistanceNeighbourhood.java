package interviewBit;

/**
 * Created by adarsh.sharma on 14/08/18.
 */
public class KthManhattanDistanceNeighbourhood {
    public int[][] solve(int K, int[][] a) {
        if (K == 0) {
            return a;
        }
        int n = a.length;
        int m = a[0].length;

        int[][] dp = new int[n][m];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                dp[i][j] = a[i][j];
            }
        }
        int[][] dpNew = new int[n][m];
        int k = 1;
        while (k <= K) {
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < m; j++) {
                    dpNew[i][j] = dp[i][j];
                    if (i > 0) {
                        dpNew[i][j] = Math.max(dpNew[i][j], dp[i - 1][j]);
                    }
                    if (j > 0) {
                        dpNew[i][j] = Math.max(dpNew[i][j], dp[i][j - 1]);
                    }

                    if (j < m - 1) {
                        dpNew[i][j] = Math.max(dpNew[i][j], dp[i][j + 1]);
                    }

                    if (i < n - 1) {
                        dpNew[i][j] = Math.max(dpNew[i][j], dp[i + 1][j]);
                    }
                }
            }
//            print(dpNew, n, m);
            dp = dpNew;
            dpNew = new int[n][m];
            k++;
        }

        return dp;
    }

    private static void print(int[][] a, int n, int m) {
        for(int i=0;i<n;i++) {
            for(int j=0;j<m;j++) {
                System.out.print(a[i][j] + " ");
            }
            System.out.println("");
        }
        System.out.println("");
    }

    public static void main(String[] args) {
        KthManhattanDistanceNeighbourhood kManhattan = new KthManhattanDistanceNeighbourhood();
        int[][] a = {
//                {21, 145, 124},
                {141, 124, 166},
                {13, 168, 100},
                {148, 199, 68},
                {13, 114, 109},
                {123, 187, 114}
        };
//        int[][] a = {
//                {100, 169, 124, 78, 158, 162, 64, 105, 145, 81, 27, 161, 91, 195, 142, 27, 36, 191, 4, 102, 153, 92},
//                {182, 21, 116, 118, 95, 47, 126, 171, 138, 69, 112, 67, 99, 35, 94, 103, 11, 122, 133, 73, 64, 141},
//                {111, 53, 68, 147, 44, 62, 157, 37, 59, 123, 141, 129, 178, 116, 35, 190, 42, 88, 106, 40, 142, 64},
//                {48, 46, 5, 90, 129, 170, 150, 6, 101, 193, 148, 29, 23, 84, 154, 156, 40, 166, 176, 131, 108, 144},
//                {39, 26, 123, 137, 138, 118, 82, 129, 141, 33, 115, 39, 58, 104, 130, 177, 106, 73, 186, 21, 145, 124},
//                {72, 70, 29, 177, 173, 97, 112, 186, 90, 161, 36, 155, 167, 55, 174, 31, 52, 150, 150, 141, 124, 166},
//                {30, 107, 191, 7, 137, 57, 87, 153, 183, 145, 109, 9, 158, 21, 188, 22, 146, 106, 30, 13, 168, 100},
//                {191, 162, 55, 10, 159, 24, 137, 148, 83, 195, 41, 2, 150, 91, 36, 174, 20, 196, 21, 148, 199, 68},
//                {84, 81, 134, 53, 199, 18, 138, 100, 188, 127, 67, 128, 93, 48, 83, 7, 21, 110, 17, 13, 114, 109},
//                {16, 135, 51, 0, 49, 119, 156, 198, 103, 24, 8, 44, 9, 189, 102, 195, 85, 93, 143, 123, 187, 114},
//                {103, 48, 0, 58, 18, 180, 196, 198, 81, 189, 198, 9, 157, 72, 22, 138, 92, 38, 179, 190, 57, 158},
//                {191, 15, 88, 156, 111, 2, 34, 72, 55, 128, 46, 162, 86, 75, 33, 69, 142, 44, 16, 81, 198, 122},
//                {51, 21, 99, 157, 76, 92, 189, 75, 112, 0, 110, 3, 69, 61, 88, 1, 189, 55, 23, 2, 185, 182},
//                {85, 88, 26, 17, 157, 32, 132, 169, 154, 121, 189, 176, 129, 168, 92, 25, 155, 34, 149, 41, 112, 145},
//                {60, 118, 153, 139, 23, 79, 196, 87, 129, 149, 37, 66, 149, 193, 195, 97, 16, 86, 105, 88, 82, 55},
//                {134, 114, 101, 116, 71, 186, 63, 113, 155, 185, 53, 112, 8, 32, 145, 113, 156, 121, 158, 46, 182, 81},
//                {144, 196, 22, 129, 161, 135, 50, 173, 66, 44, 59, 92, 39, 53, 24, 154, 110, 145, 49, 186, 113, 74},
//                {22, 168, 18, 187, 105, 158, 191, 2, 25, 77, 14, 114, 24, 134, 74, 172, 159, 33, 70, 87, 97, 118},
//                {177, 173, 70, 163, 68, 192, 185, 102, 80, 13, 27, 2, 99, 127, 25, 143, 124, 23, 172, 61, 181, 3},
//                {32, 105, 193, 125, 31, 92, 142, 22, 86, 64, 100, 187, 160, 13, 174, 70, 170, 35, 33, 111, 160, 96},
//                {67, 85, 150, 140, 94, 95, 24, 19, 125, 176, 94, 58, 102, 171, 66, 78, 193, 51, 84, 18, 64, 119},
//                {152, 0, 87, 60, 126, 10, 157, 170, 115, 176, 27, 43, 158, 164, 109, 82, 86, 165, 87, 177, 74, 25},
//                {27, 29, 128, 23, 120, 102, 162, 123, 196, 137, 61, 195, 125, 64, 60, 2, 116, 30, 126, 11, 171, 11},
//                {147, 153, 120, 190, 124, 188, 163, 140, 51, 62, 29, 100, 113, 158, 178, 165, 7, 77, 0, 58, 39, 103},
//                {160, 157, 124, 77, 108, 113, 87, 1, 50, 60, 28, 193, 184, 5, 140, 111, 104, 35, 156, 72, 150, 23},
//                {85, 156, 16, 26, 157, 126, 157, 137, 71, 69, 161, 96, 22, 17, 112, 117, 96, 185, 41, 23, 129, 29},
//                {165, 159, 132, 96, 55, 53, 162, 184, 134, 54, 172, 57, 169, 132, 163, 7, 83, 111, 35, 67, 48, 75},
//                {138, 23, 142, 154, 111, 141, 175, 59, 25, 21, 70, 26, 134, 5, 183, 50, 198, 79, 101, 193, 134, 37},
//                {134, 156, 193, 176, 105, 162, 148, 81, 100, 13, 41, 55, 55, 142, 62, 11, 77, 24, 78, 152, 43, 96},
//                {73, 40, 113, 75, 72, 18, 10, 17, 132, 112, 95, 169, 31, 40, 88, 85, 90, 97, 189, 190, 145, 153},
//                {114, 51, 140, 44, 58, 135, 159, 192, 5, 64, 181, 103, 29, 175, 8, 92, 197, 149, 156, 161, 27, 67},
//                {141, 129, 40, 13, 174, 1, 77, 15, 83, 13, 192, 24, 1, 192, 159, 70, 28, 27, 84, 75, 186, 98},
//                {170, 87, 47, 4, 103, 21, 63, 106, 163, 10, 171, 89, 40, 164, 142, 19, 113, 191, 104, 18, 32, 150},
//                {5, 175, 139, 103, 22, 98, 47, 184, 48, 171, 64, 113, 75, 145, 112, 146, 78, 169, 62, 119, 185, 89},
//                {144, 65, 140, 45, 108, 118, 70, 1, 123, 132, 72, 152, 87, 170, 163, 101, 103, 23, 127, 0, 169, 15},
//                {165, 28, 143, 147, 88, 143, 37, 9, 63, 49, 81, 188, 142, 8, 60, 21, 158, 154, 88, 146, 90, 149},
//                {43, 30, 20, 148, 67, 136, 183, 35, 26, 185, 38, 53, 29, 24, 148, 123, 159, 57, 166, 144, 155, 118},
//                {126, 11, 25, 155, 1, 149, 96, 184, 115, 164, 142, 75, 113, 142, 196, 148, 72, 26, 6, 173, 29, 4},
//                {105, 26, 12, 175, 93, 165, 36, 136, 141, 14, 194, 56, 52, 136, 38, 82, 155, 15, 131, 30, 41, 25},
//                {11, 37, 186, 90, 50, 62, 34, 93, 153, 16, 52, 8, 62, 33, 54, 103, 34, 103, 56, 148, 124, 117},
//                {13, 109, 28, 0, 80, 118, 58, 50, 155, 161, 64, 103, 76, 43, 109, 102, 161, 89, 148, 82, 53, 74},
//                {20, 2, 123, 31, 169, 78, 59, 8, 19, 171, 3, 145, 181, 104, 192, 85, 113, 98, 189, 122, 138, 37},
//                {10, 61, 34, 108, 161, 159, 93, 115, 69, 137, 69, 58, 100, 171, 64, 117, 15, 155, 15, 130, 39, 12},
//                {88, 82, 154, 85, 110, 84, 174, 180, 15, 151, 141, 115, 79, 110, 98, 73, 188, 177, 132, 156, 89, 113},
//                {8, 141, 190, 123, 163, 28, 184, 178, 0, 71, 85, 174, 71, 133, 67, 153, 95, 168, 25, 76, 29, 50},
//                {198, 109, 93, 86, 80, 116, 49, 67, 128, 79, 64, 21, 5, 26, 16, 116, 126, 66, 87, 81, 164, 140},
//        };
        int[][] solve = kManhattan.solve(2, a);

//        print(solve, 5, 3);
    }
}
